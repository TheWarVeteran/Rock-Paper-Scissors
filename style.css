const choices = ["rock", "paper", "scissors"];
let playerScore = 0;
let computerScore = 0;
let round = 0;
let totalRounds = 5;

const playerScoreSpan = document.getElementById("player-score");
const computerScoreSpan = document.getElementById("computer-score");
const roundNumberSpan = document.getElementById("round-number");
const resultDiv = document.getElementById("round-result");
const finalMessageDiv = document.getElementById("final-message");
const restartBtn = document.getElementById("restart-btn");
const bgColorPicker = document.getElementById("bg-color");
const roundsInput = document.getElementById("rounds");

const winSound = document.getElementById("win-sound");
const loseSound = document.getElementById("lose-sound");
const tieSound = document.getElementById("tie-sound");

function getComputerChoice() {
  const randomIndex = Math.floor(Math.random() * choices.length);
  return choices[randomIndex];
}

function playRound(playerChoice) {
  if (round >= totalRounds) return;
  const computerChoice = getComputerChoice();

  let result = "";
  if (playerChoice === computerChoice) {
    result = "It's a tie!";
    tieSound.play();
  } else if (
    (playerChoice === "rock" && computerChoice === "scissors") ||
    (playerChoice === "paper" && computerChoice === "rock") ||
    (playerChoice === "scissors" && computerChoice === "paper")
  ) {
    playerScore++;
    result = `You win! ${playerChoice} beats ${computerChoice}`;
    winSound.play();
  } else {
    computerScore++;
    result = `You lose! ${computerChoice} beats ${playerChoice}`;
    loseSound.play();
  }

  round++;
  updateUI(result);

  if (round >= totalRounds) {
    endGame();
  }
}

function updateUI(result) {
  playerScoreSpan.textContent = playerScore;
  computerScoreSpan.textContent = computerScore;
  roundNumberSpan.textContent = round;
  resultDiv.textContent = result;
}

function endGame() {
  let message = "";
  if (playerScore > computerScore) message = "🎉 You won the game!";
  else if (playerScore < computerScore) message = "😞 You lost the game!";
  else message = "😐 The game is a tie!";

  finalMessageDiv.textContent = message;
  renderChart(playerScore, computerScore, totalRounds - playerScore - computerScore);
}

function resetGame() {
  playerScore = 0;
  computerScore = 0;
  round = 0;
  totalRounds = parseInt(roundsInput.value) || 5;
  updateUI("");
  finalMessageDiv.textContent = "";
  const chartCanvas = document.getElementById('scoreChart');
  if (chartCanvas.chart) {
    chartCanvas.chart.destroy();
  }
}

function renderChart(playerWins, computerWins, ties) {
  const ctx = document.getElementById('scoreChart').getContext('2d');
  if (window.scoreChart) window.scoreChart.destroy();

  window.scoreChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['Player Wins', 'Computer Wins', 'Ties'],
      datasets: [{
        label: 'Game Results',
        data: [playerWins, computerWins, ties],
        backgroundColor: ['#4CAF50', '#F44336', '#FFC107']
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { display: false },
        title: {
          display: true,
          text: 'Final Game Statistics',
          font: { size: 18 }
        }
      },
      scales: {
        y: { beginAtZero: true }
      }
    }
  });
}

document.querySelectorAll(".choices button").forEach((button) => {
  button.addEventListener("click", () => playRound(button.dataset.choice));
});

restartBtn.addEventListener("click", resetGame);

bgColorPicker.addEventListener("input", (e) => {
  document.body.style.backgroundColor = e.target.value;
});

roundsInput.addEventListener("change", () => {
  totalRounds = parseInt(roundsInput.value) || 5;
  resetGame();
});

// Initialize UI
resetGame();
